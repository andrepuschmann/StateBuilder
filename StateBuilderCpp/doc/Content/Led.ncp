<Project>
  <Name>Led</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.3.1512.0, Culture=neutral, PublicKeyToken=null">
    <Name>Led</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Led</Name>
        <Access>Public</Access>
        <Location left="612" top="73" />
        <Size width="196" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private LedContext ledContext</Member>
        <Member type="Field">private LedPrivate ledPrivate</Member>
        <Member type="Method">public void On()</Member>
        <Member type="Method">public void Off()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>LedContext</Name>
        <Access>Internal</Access>
        <Location left="357" top="320" />
        <Size width="220" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Field">LedPrivate ledPrivate</Member>
        <Member type="Constructor">public LedContext(LedPrivate ledPrivate)</Member>
        <Member type="Method">public void On()</Member>
        <Member type="Method">public void Off()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>LedPrivate</Name>
        <Access>Internal</Access>
        <Location left="636" top="320" />
        <Size width="171" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void DoOn()</Member>
        <Member type="Method">public void DoOff()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Class generated by StateBuilderCpp</Text>
        <Location left="369" top="161" />
        <Size width="180" height="50" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="0" second="2">
        <Label>creates</Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>722</X>
          <Y>243</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>722</X>
          <Y>276</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="0" second="1">
        <Label>creates and uses</Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>648</X>
          <Y>243</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>550</X>
          <Y>279</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
      </Relationship>
      <Relationship type="Association" first="1" second="2">
        <Label>uses</Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
      <Relationship type="Comment" first="3" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.3.1512.0, Culture=neutral, PublicKeyToken=null">
    <Name>States</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>LedRootState</Name>
        <Access>Public</Access>
        <Location left="829" top="249" />
        <Size width="243" height="171" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static LedRootState GetInstance()</Member>
        <Member type="Method">public static void OnEntry(LedContext context)</Member>
        <Member type="Method">public static void OnExit(LedContext context)</Member>
        <Member type="Method">public void On(LedContext context)</Member>
        <Member type="Method">public void Off(LedContext context)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>LedContext</Name>
        <Access>Public</Access>
        <Location left="829" top="44" />
        <Size width="243" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Field">LedPrivate ledPrivate</Member>
        <Member type="Constructor">public LedContext(LedPrivate ledPrivate)</Member>
        <Member type="Method">public void On()</Member>
        <Member type="Method">public void Off()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>LedSwitchedOffState</Name>
        <Access>Public</Access>
        <Location left="670" top="491" />
        <Size width="243" height="171" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static LedSwitchedOffState GetInstance()</Member>
        <Member type="Method">public static void OnEntry(LedContext context)</Member>
        <Member type="Method">public static void OnExit(LedContext context)</Member>
        <Member type="Method">public void On(LedContext context)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>LedSwitchedOnState</Name>
        <Access>Public</Access>
        <Location left="971" top="491" />
        <Size width="243" height="171" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static LedSwitchedOnState GetInstance()</Member>
        <Member type="Method">public static void OnEntry(LedContext context)</Member>
        <Member type="Method">public static void OnExit(LedContext context)</Member>
        <Member type="Method">public void Off(LedContext context)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="2" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="3" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="1" second="0">
        <Label>has</Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.3.1512.0, Culture=neutral, PublicKeyToken=null">
    <Name>Context</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>LedContext</Name>
        <Access>Public</Access>
        <Location left="688" top="274" />
        <Size width="220" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Field">LedPrivate ledPrivate</Member>
        <Member type="Constructor">public LedContext(LedPrivate ledPrivate)</Member>
        <Member type="Method">public void On()</Member>
        <Member type="Method">public void Off()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>LedContext</Name>
        <Access>Public</Access>
        <Location left="944" top="274" />
        <Size width="220" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Field">LedPrivate ledPrivate</Member>
        <Member type="Constructor">public LedContext(LedPrivate ledPrivate)</Member>
        <Member type="Method">public void On()</Member>
        <Member type="Method">public void Off()</Member>
        <Member type="Method">private void OnSync()</Member>
        <Member type="Method">private void OffSync()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Synchronous state machine:
On() and Off() are synchronous.</Text>
        <Location left="688" top="129" />
        <Size width="220" height="93" />
      </Entity>
      <Entity type="Comment">
        <Text>Asynchronous state machine:
On() and Off() are asynchronous.
OnSync() and OffSync() are synchronous and private.</Text>
        <Location left="944" top="129" />
        <Size width="206" height="93" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Comment" first="2" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Comment" first="3" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1047</X>
          <Y>248</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1047</X>
          <Y>241</Y>
        </BendPoint>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>